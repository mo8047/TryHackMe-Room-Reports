# 🧠 TryHackMe – Networking Fundamentals (Summarized Notes)

## 📦 Packets vs. Frames

| Term   | OSI Layer | Description                                           |
|--------|-----------|-------------------------------------------------------|
| Packet | Layer 3    | Contains IP header & payload. Routes across networks. |
| Frame  | Layer 2    | Wraps packet with MAC info for local delivery.        |

- **Encapsulation:** Like mailing a letter—frame is envelope, packet is letter.
- Packets split large data into chunks to reduce congestion.
- Headers in IP packets include:
  - **TTL** – Packet expiration.
  - **Checksum** – Corruption detection.
  - **Source IP** / **Destination IP** – Routing info.

---

## 🔁 TCP/IP Model & Three-Way Handshake

### 🧱 TCP/IP Layers
1. Application  
2. Transport  
3. Internet  
4. Network Interface

### 📡 TCP – Reliable, Connection-Based
- Uses **3-Way Handshake**:
  1. `SYN` – Client initiates
  2. `SYN/ACK` – Server acknowledges
  3. `ACK` – Client confirms

- **Headers in TCP Packets**:
  - Source/Destination Port
  - IPs
  - Sequence & Acknowledgement Number
  - Checksum
  - Flags: `SYN`, `ACK`, `FIN`, `RST`
  - Data

### 📉 TCP Pros & Cons
| Pros                         | Cons                                     |
|-----------------------------|------------------------------------------|
| Guarantees delivery         | Slower due to overhead                   |
| Synchronization of devices  | Blocks if a packet is lost               |
| High reliability            | More resource usage                      |

### 🔚 TCP Connection Closing
- `FIN` sent → ACK → connection closed.

---

## ⚡ UDP – Fast, Stateless

- No connection setup (no handshake).
- Used in gaming, streaming, VoIP.
- Doesn’t guarantee delivery or order.

### 🧩 UDP Packet Headers:
- TTL
- Source/Destination IP
- Source/Destination Port
- Data

### 📉 UDP Pros & Cons
| Pros               | Cons                          |
|--------------------|-------------------------------|
| Very fast          | No delivery guarantees        |
| Low resource use   | Data loss can occur easily    |

---

## 🔌 Ports 101

- Ports range: **0–65535**
- **Common (Well-Known) Ports: 0–1023**

### 🔒 Common Ports

| Protocol | Port | Purpose                          |
|----------|------|----------------------------------|
| FTP      | 21   | File transfer                    |
| SSH      | 22   | Remote shell                     |
| HTTP     | 80   | Web (unencrypted)                |
| HTTPS    | 443  | Web (encrypted)                  |
| SMB      | 445  | File/printer sharing             |
| RDP      | 3389 | Remote desktop                   |

> ⚠️ Non-standard ports require explicit mention, e.g., `http://IP:8080`

---

## 🧪 Practicals (Summary)

- **TCP Handshake Simulation:** Practiced using `SYN`, `ACK`, `FIN`.
- **UDP Overview:** Compared to TCP.
- **Port Challenge:** Connected to IP `8.8.8.8` on port `1234` via terminal to retrieve a flag.

---

📁 Recommended filename: `networking_basics.md`
✅ Ready for GitHub repo: `tryhackme-notes/networking_basics.md`

